"use strict";(self.webpackChunkdocumentation_template=self.webpackChunkdocumentation_template||[]).push([[9815],{3763:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=e(4848),s=e(8453);const i={},r="2. Architecture Constraints",a={id:"Constrains/index",title:"2. Architecture Constraints",description:"Contents",source:"@site/docs/02_Constrains/index.md",sourceDirName:"02_Constrains",slug:"/Constrains/",permalink:"/documentation-template/docs/Constrains/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02_Constrains/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"1. Introduction and Goals",permalink:"/documentation-template/docs/IntroductionAndGoals/"},next:{title:"3. System Scope and Context",permalink:"/documentation-template/docs/ContextAndScope/"}},c={},d=[];function l(n){const t={a:"a",h1:"h1",p:"p",strong:"strong",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"2-architecture-constraints",children:"2. Architecture Constraints"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Contents"})}),"\n",(0,o.jsx)(t.p,{children:"Any requirement that constraints software architects in their freedom of\ndesign and implementation decisions or decision about the development\nprocess. These constraints sometimes go beyond individual systems and\nare valid for whole organizations and companies."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Motivation"})}),"\n",(0,o.jsx)(t.p,{children:"Architects should know exactly where they are free in their design\ndecisions and where they must adhere to constraints. Constraints must\nalways be dealt with; they may be negotiable, though."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Form"})}),"\n",(0,o.jsx)(t.p,{children:"Simple tables of constraints with explanations. If needed you can\nsubdivide them into technical constraints, organizational and political\nconstraints and conventions (e.g. programming or versioning guidelines,\ndocumentation or naming conventions)"}),"\n",(0,o.jsxs)(t.p,{children:["See ",(0,o.jsx)(t.a,{href:"https://docs.arc42.org/section-2/",children:"Architecture Constraints"})," in the\narc42 documentation."]})]})}function u(n={}){const{wrapper:t}={...(0,s.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>r,x:()=>a});var o=e(6540);const s={},i=o.createContext(s);function r(n){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),o.createElement(i.Provider,{value:t},n.children)}}}]);