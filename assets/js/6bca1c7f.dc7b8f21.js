"use strict";(self.webpackChunkdocumentation_template=self.webpackChunkdocumentation_template||[]).push([[6712],{2084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(4848),o=t(8453);const i={},a="3. System Scope and Context",r={id:"ContextAndScope/index",title:"3. System Scope and Context",description:"Contents",source:"@site/docs/03_ContextAndScope/index.md",sourceDirName:"03_ContextAndScope",slug:"/ContextAndScope/",permalink:"/documentation-template/docs/ContextAndScope/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03_ContextAndScope/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2. Architecture Constraints",permalink:"/documentation-template/docs/Constrains/"},next:{title:"4. Solution Strategy",permalink:"/documentation-template/docs/SolutionStrategy/"}},c={},l=[{value:"Business Context",id:"business-context",level:2},{value:"Technical Context",id:"technical-context",level:2}];function d(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"3-system-scope-and-context",children:"3. System Scope and Context"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Contents"})}),"\n",(0,s.jsx)(n.p,{children:"System scope and context - as the name suggests - delimits your system\n(i.e. your scope) from all its communication partners (neighboring\nsystems and users, i.e. the context of your system). It thereby\nspecifies the external interfaces."}),"\n",(0,s.jsx)(n.p,{children:"If necessary, differentiate the business context (domain specific inputs\nand outputs) from the technical context (channels, protocols, hardware)."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://mermaid.js.org/intro/getting-started.html",children:"https://mermaid.js.org/intro/getting-started.html"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.mdxAdmonitionTitle,{}),(0,s.jsx)(n.p,{children:"Write mermaid diagrams directly in md file. The documentation template will automatically compile it."})]}),"\n",(0,s.jsxs)(n.p,{children:["By the way, how to create annotations? ",(0,s.jsx)(n.a,{href:"https://docusaurus.io/docs/next/markdown-features/admonitions",children:"https://docusaurus.io/docs/next/markdown-features/admonitions"})]}),"\n",(0,s.jsx)(n.mermaid,{value:'    C4Context\n      title System Context diagram for Internet Banking System\n      Enterprise_Boundary(b0, "BankBoundary0") {\n        Person(customerA, "Banking Customer A", "A customer of the bank, with personal bank accounts.")\n        Person(customerB, "Banking Customer B")\n        Person_Ext(customerC, "Banking Customer C", "desc")\n\n        Person(customerD, "Banking Customer D", "A customer of the bank, <br/> with personal bank accounts.")\n\n        System(SystemAA, "Internet Banking System", "Allows customers to view information about their bank accounts, and make payments.")\n\n        Enterprise_Boundary(b1, "BankBoundary") {\n\n          SystemDb_Ext(SystemE, "Mainframe Banking System", "Stores all of the core banking information about customers, accounts, transactions, etc.")\n\n          System_Boundary(b2, "BankBoundary2") {\n            System(SystemA, "Banking System A")\n            System(SystemB, "Banking System B", "A system of the bank, with personal bank accounts. next line.")\n          }\n\n          System_Ext(SystemC, "E-mail system", "The internal Microsoft Exchange e-mail system.")\n          SystemDb(SystemD, "Banking System D Database", "A system of the bank, with personal bank accounts.")\n\n          Boundary(b3, "BankBoundary3", "boundary") {\n            SystemQueue(SystemF, "Banking System F Queue", "A system of the bank.")\n            SystemQueue_Ext(SystemG, "Banking System G Queue", "A system of the bank, with personal bank accounts.")\n          }\n        }\n      }\n\n      BiRel(customerA, SystemAA, "Uses")\n      BiRel(SystemAA, SystemE, "Uses")\n      Rel(SystemAA, SystemC, "Sends e-mails", "SMTP")\n      Rel(SystemC, customerA, "Sends e-mails to")\n\n      UpdateElementStyle(customerA, $fontColor="red", $bgColor="grey", $borderColor="red")\n      UpdateRelStyle(customerA, SystemAA, $textColor="blue", $lineColor="blue", $offsetX="5")\n      UpdateRelStyle(SystemAA, SystemE, $textColor="blue", $lineColor="blue", $offsetY="-10")\n      UpdateRelStyle(SystemAA, SystemC, $textColor="blue", $lineColor="blue", $offsetY="-40", $offsetX="-50")\n      UpdateRelStyle(SystemC, customerA, $textColor="red", $lineColor="red", $offsetX="-50", $offsetY="20")\n\n      UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="1")\n'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Motivation"})}),"\n",(0,s.jsx)(n.p,{children:"The domain interfaces and technical interfaces to communication partners\nare among your system's most critical aspects. Make sure that you\ncompletely understand them."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Form"})}),"\n",(0,s.jsx)(n.p,{children:"Various options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Context diagrams"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Lists of communication partners and their interfaces."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://docs.arc42.org/section-3/",children:"Context and Scope"})," in the arc42\ndocumentation."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"business-context",children:"Business Context"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Contents"})}),"\n",(0,s.jsxs)(n.p,{children:["Specification of ",(0,s.jsx)(n.strong,{children:"all"})," communication partners (users, IT-systems, ...)\nwith explanations of domain specific inputs and outputs or interfaces.\nOptionally you can add domain specific formats or communication\nprotocols."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Motivation"})}),"\n",(0,s.jsx)(n.p,{children:"All stakeholders should understand which data are exchanged with the\nenvironment of the system."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Form"})}),"\n",(0,s.jsx)(n.p,{children:"All kinds of diagrams that show the system as a black box and specify\nthe domain interfaces to communication partners."}),"\n",(0,s.jsx)(n.p,{children:"Alternatively (or additionally) you can use a table. The title of the\ntable is the name of your system, the three columns contain the name of\nthe communication partner, the inputs, and the outputs."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"<Diagram or Table>"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"<optionally: Explanation of external domain interfaces>"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"technical-context",children:"Technical Context"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Contents"})}),"\n",(0,s.jsx)(n.p,{children:"Technical interfaces (channels and transmission media) linking your\nsystem to its environment. In addition a mapping of domain specific\ninput/output to the channels, i.e. an explanation which I/O uses which\nchannel."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Motivation"})}),"\n",(0,s.jsx)(n.p,{children:"Many stakeholders make architectural decision based on the technical\ninterfaces between the system and its context. Especially infrastructure\nor hardware designers decide these technical interfaces."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Form"})}),"\n",(0,s.jsx)(n.p,{children:"E.g. UML deployment diagram describing channels to neighboring systems,\ntogether with a mapping table showing the relationships between channels\nand input/output."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"<Diagram or Table>"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"<optionally: Explanation of technical interfaces>"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"<Mapping Input/Output to Channels>"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"solution-strategy",children:"Solution Strategy"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Contents"})}),"\n",(0,s.jsx)(n.p,{children:"A short summary and explanation of the fundamental decisions and\nsolution strategies, that shape system architecture. It includes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"technology decisions"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"decisions about the top-level decomposition of the system, e.g.\nusage of an architectural pattern or design pattern"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"decisions on how to achieve key quality goals"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"relevant organizational decisions, e.g. selecting a development\nprocess or delegating certain tasks to third parties."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Motivation"})}),"\n",(0,s.jsx)(n.p,{children:"These decisions form the cornerstones for your architecture. They are\nthe foundation for many other detailed decisions or implementation\nrules."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Form"})}),"\n",(0,s.jsx)(n.p,{children:"Keep the explanations of such key decisions short."}),"\n",(0,s.jsx)(n.p,{children:"Motivate what was decided and why it was decided that way, based upon\nproblem statement, quality goals and key constraints. Refer to details\nin the following sections."}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://docs.arc42.org/section-4/",children:"Solution Strategy"})," in the arc42\ndocumentation."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);